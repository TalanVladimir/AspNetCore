@*@model IEnumerable<AspNetCore.Models.Member>*@
@model MembersPaginatedList<AspNetCore.Models.Member>

@{
    ViewData["Title"] = "Index";


    var dateSortParam = ViewBag.DateSortParam;
    var nameSortParam = ViewBag.NameSortParam;
    var ageSortParam = ViewBag.AgeSortParam;
    var genderSortParam = ViewBag.GenderSortParam;

    var currentPage = ViewBag.CurrentPage;
    var currentSort = ViewBag.CurrentSort;
    var currentFilter = ViewBag.CurrentFilter;

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    var limitPages = Model.LimitPages;
    var totalPages = Model.TotalPages;
}

<h1>@ViewData["Title"]</h1>

<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

Search:
<form class="row g-3" asp-controller="Members" asp-action="Index" method="get">
    <div class="col-auto">
        <input type="text" class="form-control" name="currentFilter" value="@currentFilter">
    </div>
    <div class="col-auto">
        <a asp-action="Index"
           type="submit"
           class="btn btn-primary">
            Clear Filters
        </a>
    </div>
    @if (this.User.Identity.IsAuthenticated)
    {
        <div class="col-auto">
            <a asp-action="Create"
               asp-route-pageNumber="@currentPage"
               asp-route-sortOrder="@currentSort"
               asp-route-currentFilter="@currentFilter"
               class="btn btn-success event">
                Create
            </a>
        </div>
    }
</form>
<br />

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-pageNumber="@currentPage"
                   asp-route-sortOrder="@dateSortParam"
                   asp-route-currentFilter="@currentFilter">
                    Confirmation Date
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-pageNumber="@currentPage"
                   asp-route-sortOrder="@nameSortParam"
                   asp-route-currentFilter="@currentFilter">
                    Municipality Name
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-pageNumber="@currentPage"
                   asp-route-sortOrder="@ageSortParam"
                   asp-route-currentFilter="@currentFilter">
                    Age Bracket
                </a>
            </th>
            <th>
                <a asp-action="Index"
                   asp-route-pageNumber="@currentPage"
                   asp-route-sortOrder="@genderSortParam"
                   asp-route-currentFilter="@currentFilter">
                    Gender
                </a>
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.confirmation_date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.municipality_name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.age_bracket)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.gender)
                </td>
                <td>
                    @if (this.User.Identity.IsAuthenticated)
                    {<a asp-action="Edit"
                        asp-route-pageNumber="@currentPage"
                        asp-route-sortOrder="@currentSort"
                        asp-route-currentFilter="@currentFilter"
                        asp-route-id="@item.OID"
                        class="btn btn-primary event">
                            Edit
                        </a>
                    }
                    <a asp-action="Details"
                       asp-route-pageNumber="@currentPage"
                       asp-route-sortOrder="@currentSort"
                       asp-route-currentFilter="@currentFilter"
                       asp-route-id="@item.OID"
                       class="btn btn-secondary event">
                        Details
                    </a>
                    @if (this.User.Identity.IsAuthenticated)
                    {<a asp-action="Delete"
                        asp-route-pageNumber="@currentPage"
                        asp-route-sortOrder="@currentSort"
                        asp-route-currentFilter="@currentFilter"
                        asp-route-id="@item.OID"
                        class="btn btn-danger event">
                            Delete
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-start">
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-pageNumber="1"
               asp-route-sortOrder="@currentSort"
               asp-route-currentFilter="@currentFilter"
               class="page-link">
                First
            </a>
        </li>
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-sortOrder="@currentSort"
               asp-route-currentFilter="@currentFilter"
               class="page-link">
                Previous
            </a>
        </li>
        @{
            if (currentPage == null)
                currentPage = 1;
            int startPage = 1;
            int endPage = totalPages;
            int maxPages = limitPages * 2;
            if (totalPages > maxPages)
            {
                if (currentPage > limitPages)
                {
                    endPage = currentPage + limitPages;
                    if (endPage > totalPages)
                        endPage = totalPages;
                    startPage = endPage - maxPages;
                }
                else
                {
                    startPage = currentPage - limitPages;
                    if (startPage < 1)
                        startPage = 1;
                    endPage = startPage + maxPages;
                }
            }
        }
        @for (int i = startPage; i < endPage + 1; i++)
        {
            var active = string.Empty;
            if (i == currentPage)
                active = "active";
            <li class="page-item @active">
                <a asp-action="Index"
                   asp-route-pageNumber="@i"
                   asp-route-sortOrder="@currentSort"
                   asp-route-currentFilter="@currentFilter"
                   class="page-link">
                    @i
                </a>
            </li>
        }
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-sortOrder="@currentSort"
               asp-route-currentFilter="@currentFilter"
               class="page-link">
                Next
            </a>
        </li>
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-pageNumber="@totalPages"
               asp-route-sortOrder="@currentSort"
               asp-route-currentFilter="@currentFilter"
               class="page-link">
                Last
            </a>
        </li>
    </ul>
</nav>