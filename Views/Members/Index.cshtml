@*@model IEnumerable<AspNetCore.Models.Member>*@
@model PagedList.IPagedList<AspNetCore.Models.Member>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Index";
}

<h1>@ViewData["Title"]</h1>

<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

@*<form asp-controller="Members" asp-action="Index" method="get">
        <p>
            Search: <input class="form-control" style="width:300px" type="text" name="searchString" />
        </p>
    </form>*@
@using (Html.BeginForm("Index", "Member", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @*@Html.ActionLink(@Html.DisplayNameFor(model => model.confirmation_date), "Index", new { sortOrder = ViewBag.DateSortParm })*@
                @Html.ActionLink("Confirmation Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                Code
                @*<a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="municipality_code">@Html.DisplayNameFor(model => model.case_code)</a>*@
            </th>
            <th>
                @Html.ActionLink("Municipality Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                @*<a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="municipality_name">@Html.DisplayNameFor(model => model.municipality_name)</a>*@
            </th>
            <th>
                Age
                @*<a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="age_bracket">@Html.DisplayNameFor(model => model.age_bracket)</a>*@
            </th>
            <th>
                Gender
                @*<a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="gender">@Html.DisplayNameFor(model => model.gender)</a>*@
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.confirmation_date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.municipality_code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.municipality_name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.age_bracket)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.gender)
                </td>
                <td>
                    @if (this.User.Identity.IsAuthenticated)
                    {<a class="btn btn-primary event" asp-action="Edit" asp-route-id="@item.OID">Edit</a>}
                    <a class="btn btn-secondary event" asp-action="Details" asp-controller="Members" asp-route-id="@item.OID">Details</a>
                    @if (this.User.Identity.IsAuthenticated)
                    {<a class="btn btn-danger event" asp-action="Delete" asp-route-id="@item.OID">Delete</a>}
                </td>
            </tr>
        }
    </tbody>
</table>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@*@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))*@
@*@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))*@

@*@{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>*@

@if (this.User.Identity.IsAuthenticated)
{
    <a class="btn btn-success event" asp-action="Create">Create</a>
}