@model MembersPaginatedList<AspNetCore.Models.Member>

@{
    ViewData["Title"] = "Index";
}

<h1>@ViewData["Title"]</h1>

<div id="modDialog" class="modal fade">
    <div id="dialogContent" class="modal-dialog"></div>
</div>

<form asp-controller="Members" asp-action="Index" method="get">
    <p>
        Search: <input class="form-control" style="width:300px" type="text" name="searchString" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="confirmation_date">Confirmation Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="municipality_code">Municipality Code</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="municipality_name">Municipality Name</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="age_bracket">Age Bracket</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="name_desc" asp-route-currentFilter="gender">Gender</a>
            </th>
            <th>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.confirmation_date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.municipality_code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.municipality_name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.age_bracket)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.gender)
                </td>
                <td>
                    @if (this.User.Identity.IsAuthenticated)
                    {<a class="btn btn-primary event" asp-action="Edit" asp-route-id="@item.OID">Edit</a>}
                    <a class="btn btn-secondary event" asp-action="Details" asp-controller="Members" asp-route-id="@item.OID">Details</a>
                    @if (this.User.Identity.IsAuthenticated)
                    {<a class="btn btn-danger event" asp-action="Delete" asp-route-id="@item.OID">Delete</a>}
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

@if (this.User.Identity.IsAuthenticated)
{
    <a class="btn btn-success event" asp-action="Create">Create</a>
}